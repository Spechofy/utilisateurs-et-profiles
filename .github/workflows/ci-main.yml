name: CI - Gestion des utilisateurs et profiles (Main)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      # Postgres pour Spring Boot (diffÃ©rent)
      postgres-spring:
        image: postgres:16
        env:
          POSTGRES_DB: dbGestionDesUtilisateurs
          POSTGRES_USER: springuser
          POSTGRES_PASSWORD: springpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U springuser"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Wait for Keycloak and Postgres to be ready
        run: |
          echo "Waiting for Postgres Spring..."
          until pg_isready -h localhost -p 5432 -U springuser; do sleep 5; done

      - name: Run Maven lint (Checkstyle)
        run: mvn checkstyle:check

      - name: Run Maven tests
        env:
          # Database configuration
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/dbGestionDesUtilisateurs
          SPRING_DATASOURCE_USERNAME: springuser
          SPRING_DATASOURCE_PASSWORD: springpass
        run: mvn test

      - name: SonarQube Scan
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN
